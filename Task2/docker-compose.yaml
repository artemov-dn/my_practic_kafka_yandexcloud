version: "3.5"
services:
 kafka-0:
  image: bitnami/kafka:latest
  container_name: kafka-0
  hostname: kafka-0
  ports:
     - "9092:9092"
     - "9093:9093"
     - "9094:9094"
  networks:
     - kafka_net   
  environment:
      KAFKA_ENABLE_KRAFT: yes
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_KRAFT_CLUSTER_ID: practicum
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9092,EXTERNAL://127.0.0.1:9094

 hadoop-namenode:
   image: apache/hadoop:3.4.1
   container_name: hadoop-namenode
   hostname: hadoop-namenode
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"
         memory: "2g"
   shm_size: 10G
   ports:
     - "9870:9870"
     - "9000:9000"
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./namenode_entrypoint.sh:/namenode_entrypoint.sh
   entrypoint: ["/bin/bash", "/namenode_entrypoint.sh"]
   command: ["hdfs", "namenode"]
   networks:
     - kafka_net   

 hadoop-datanode-1:
   image: apache/hadoop:3.4.1
   container_name: hadoop-datanode-1
   hostname: hadoop-datanode-1
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"
         memory: "2g"
   shm_size: 10G
   depends_on:
     - hadoop-namenode
   ports:
     - "9864:9864"
     - "9970:9970"
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-datanode-1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./datanode_entrypoint.sh:/datanode_entrypoint.sh
   entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
   command: ["hdfs", "datanode"]
   networks:
     - kafka_net   

 hadoop-datanode-2:
   image: apache/hadoop:3.4.1
   container_name: hadoop-datanode-2
   hostname: hadoop-datanode-2
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"
         memory: "2g"
   shm_size: 10G
   depends_on:
     - hadoop-namenode
   ports:
     - "9865:9865"
     - "9971:9971"
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-datanode-2.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./datanode_entrypoint.sh:/datanode_entrypoint.sh
   entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
   command: ["hdfs", "datanode"]
   networks:
     - kafka_net   

 hadoop-datanode-3:
   image: apache/hadoop:3.4.1
   container_name: hadoop-datanode-3
   hostname: hadoop-datanode-3
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"
         memory: "2g"
   shm_size: 10G
   depends_on:
     - hadoop-namenode
   ports:
     - "9866:9866"
     - "9972:9972"
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-datanode-3.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./datanode_entrypoint.sh:/datanode_entrypoint.sh
   entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
   command: ["hdfs", "datanode"]
   networks:
     - kafka_net   

 consumer:
   build:
     dockerfile: ./kafka_spring_consumer/Dockerfile
   container_name: consumer  
   depends_on:
     - kafka-0
   environment:
     - KAFKA_SERVERS=kafka-0:9092
     - HADOOP_SERVER=hadoop-namenode:9000
   networks:
     - kafka_net

 producer:
   build:
     dockerfile: ./kafka_spring_producer/Dockerfile
   container_name: producer
   depends_on:
     - kafka-0
   environment:
     - KAFKA_SERVERS=kafka-0:9092
   networks:
     - kafka_net
     
 ui:
   image: provectuslabs/kafka-ui:v0.7.0
   restart: always
   ports:
     - "127.0.0.1:8085:8080"
   environment:
     KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-0:9092
     KAFKA_CLUSTERS_0_NAME: kraft
   networks:
     - kafka_net     

networks:
  kafka_net:      
    name: my_net